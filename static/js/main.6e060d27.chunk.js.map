{"version":3,"sources":["client.ts","components/Map.tsx","components/Table.tsx","App.tsx","useInterval.tsx","serviceWorker.ts","index.tsx"],"names":["fetchTrains","axios","get","Map","props","tip","handleMouseMove","info","evt","show","name","shortname","position","pageX","pageY","handleMouseMoveTrain","speed","handleMouseLeave","hide","handleCitySelection","setState","center","coordinates","zoom","showReset","handleAreaSelection","undefined","geometry","handleReset","state","this","tooltip","create","minorLocations","majorLocations","trains","time","className","onClick","defaultStyle","x","y","style","spring","stiffness","damping","projection","projectionConfig","scale","width","height","disablePanning","geography","FinlandMap","geographies","map","i","id","key","default","fill","stroke","strokeWidth","outline","hover","pressed","marker","longitude","latitude","stationName","stationShortCode","onMouseMove","onMouseLeave","data-station","cx","cy","r","opacity","textAnchor","fontFamily","fontSize","cursor","location","trainNumber","React","Component","Table","locations","columns","Header","accessor","Cell","row","color","value","marginLeft","size","filterMethod","filter","Filter","onChange","event","target","d","type","rows","matchSorter","keys","filterAll","data","defaultPageSize","defaultFilterMethod","String","filterable","majorStops","App","useState","updatedTime","Date","toLocaleTimeString","useEffect","Promise","all","client","then","res","indexOf","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","console","log","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qv1EAOaA,EAAc,kBAA8BC,IAAMC,IAC7D,+D,uFC8SaC,E,YA9Rb,WAAYC,GAAe,IAAD,8BACxB,4CAAMA,KAHRC,SAE0B,IAc1BC,gBAAkB,SAChBC,EACAC,GAEA,EAAKH,IAAII,KAAT,uDAEMF,EAAKG,KAFX,aAEoBH,EAAKI,UAFzB,0BAKA,EAAKN,IAAIO,SAAS,CAAEC,MAAOL,EAAIK,MAAOC,MAAON,EAAIM,SAvBzB,EA0B1BC,qBAAuB,SACrBR,EACAC,GAEA,EAAKH,IAAII,KAAT,8DAEaF,EAAKS,MAFlB,8BAKA,EAAKX,IAAIO,SAAS,CAAEC,MAAOL,EAAIK,MAAOC,MAAON,EAAIM,SAnCzB,EAsC1BG,iBAAmB,kBAAM,EAAKZ,IAAIa,QAtCR,EAwC1BC,oBAAsB,SAACX,GACrB,EAAKY,SAAS,CACZC,OAAQb,EAAIc,YACZC,KAAM,EACNC,WAAW,KA5CW,EAgD1BC,oBAAsB,SAACjB,QACwBkB,IAAzClB,EAAImB,SAASL,YAAY,GAAG,GAAG,GAAG,GACpC,EAAKF,SAAS,CACZC,OAAQ,CAACb,EAAImB,SAASL,YAAY,GAAG,GAAG,GAAG,GAAId,EAAImB,SAASL,YAAY,GAAG,GAAG,GAAG,IACjFC,KAAM,EACNC,WAAW,IAIb,EAAKJ,SAAS,CACZC,OAAQ,CAACb,EAAImB,SAASL,YAAY,GAAG,GAAG,GAAId,EAAImB,SAASL,YAAY,GAAG,GAAG,IAC3EC,KAAM,EACNC,WAAW,KA5DS,EAkE1BI,YAAc,WACZ,EAAKR,SAAS,CACZC,OAAQ,CAAC,KAAM,MACfE,KAAM,IACNC,WAAW,KApEb,EAAKK,MAAQ,CACXR,OAAQ,CAAC,KAAM,MACfE,KAAM,IACNC,WAAW,GALW,E,iFAUxBM,KAAKzB,IAAM0B,MACXD,KAAKzB,IAAI2B,W,+BA+DD,IAAD,SAMHF,KAAK1B,MAJP6B,EAFK,EAELA,eACAC,EAHK,EAGLA,eACAC,EAJK,EAILA,OACAC,EALK,EAKLA,KAGF,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACZP,KAAKD,MAAML,WACV,4BAAQa,UAAU,eAAeC,QAASR,KAAKF,aAA/C,WAIN,yBAAKS,UAAU,aAAf,sBACsBD,GAEtB,kBAAC,SAAD,CACEG,aAAc,CACZhB,KAAM,EACNiB,EAAG,KACHC,EAAG,MAELC,MAAO,CACLnB,KAAMoB,iBAAOb,KAAKD,MAAMN,KAAM,CAAEqB,UAAW,IAAKC,QAAS,KACzDL,EAAGG,iBAAOb,KAAKD,MAAMR,OAAO,GAAI,CAAEuB,UAAW,IAAKC,QAAS,KAC3DJ,EAAGE,iBAAOb,KAAKD,MAAMR,OAAO,GAAI,CAAEuB,UAAW,IAAKC,QAAS,QAG5D,gBAAGtB,EAAH,EAAGA,KAAMiB,EAAT,EAASA,EAAGC,EAAZ,EAAYA,EAAZ,OACC,kBAAC,gBAAD,CACEK,WAAW,WACXC,iBAAkB,CAAEC,MAAO,MAC3BC,MAAO,IACPC,OAAQ,KACRR,MAAO,CAAEO,MAAO,OAAQC,OAAQ,SAEhC,kBAAC,gBAAD,CAAe7B,OAAQ,CAACmB,EAAGC,GAAIlB,KAAMA,EAAM4B,gBAAc,GACvD,kBAAC,cAAD,CAAaC,UAAWC,IACrB,SAACC,EAAoBR,GAArB,OACCQ,EAAYC,KAAI,SAACH,EAAWI,GAAZ,MACG,QAAjBJ,EAAUK,IACR,kBAAC,YAAD,CACEC,IAAKF,EACLJ,UAAWA,EACXN,WAAYA,EACZR,QAAS,EAAKb,oBACdiB,MAAO,CACLiB,QAAS,CACPC,KAAM,UACNC,OAAQ,UACRC,YAAa,IACbC,QAAS,QAEXC,MAAO,CACLJ,KAAM,UACNC,OAAQ,UACRC,YAAa,OACbC,QAAS,QAEXE,QAAS,CACPL,KAAM,UACNC,OAAQ,UACRC,YAAa,OACbC,QAAS,iBAMvB,kBAAC,UAAD,KACG9B,EAAesB,KAAI,SAACW,EAAQV,GAAT,OAClB,kBAAC,SAAD,CACEE,IAAKF,EACLU,OAAQ,CACN5C,YAAa,CAAC4C,EAAOC,UAAWD,EAAOE,UACvC1D,KAAMwD,EAAOG,YACb1D,UAAWuD,EAAOI,kBAEpB5B,MAAO,CACLiB,QAAS,CAAEC,KAAM,WACjBI,MAAO,CAAEJ,KAAM,WACfK,QAAS,CAAEL,KAAM,YAGnBW,YAAa,EAAKjE,gBAClBkE,aAAc,EAAKvD,iBACnBwD,eAAcjB,EACdlB,QAAS,EAAKnB,qBAGd,4BACEuD,GAAI,EACJC,GAAI,EACJC,EAAG,IACHlC,MAAO,CACLmB,OAAQ,UACRC,YAAa,EACbe,QAAS,UAMnB,kBAAC,UAAD,KACG3C,EAAeqB,KAAI,SAACW,EAAQV,GAAT,OAClB,kBAAC,SAAD,CACEE,IAAKF,EACLU,OAAQ,CACN5C,YAAa,CAAC4C,EAAOC,UAAWD,EAAOE,UACvC1D,KAAMwD,EAAOG,YACb1D,UAAWuD,EAAOI,kBAEpB5B,MAAO,CACLiB,QAAS,CAAEC,KAAM,WACjBI,MAAO,CAAEJ,KAAM,WACfK,QAAS,CAAEL,KAAM,YAGnBW,YAAa,EAAKjE,gBAClBkE,aAAc,EAAKvD,iBACnBwD,eAAcjB,EACdlB,QAAS,EAAKnB,qBAGd,4BACEuD,GAAI,EACJC,GAAI,EACJC,EAAG,GACHlC,MAAO,CACLmB,OAAQ,UACRC,YAAa,EACbe,QAAS,KAGb,0BACEC,WAAW,SACXrC,EAAG,IACHC,MAAO,CACLqC,WAAY,qBACZnB,KAAM,OACNoB,SAAU,OACVC,OAAQ,YAGTf,EAAOI,uBAMhB,kBAAC,UAAD,KACGnC,EAAOoB,KAAI,SAACW,EAAQV,GAAT,OACV,kBAAC,SAAD,CACEE,IAAKF,EACLU,OAAQ,CACN5C,YAAa,CAAC4C,EAAOgB,SAAS5D,YAAY,GAAI4C,EAAOgB,SAAS5D,YAAY,IAC1EN,MAAOkD,EAAOlD,OAEhBuD,YAA8B,IAAjBL,EAAOlD,OAAekD,EAAOiB,YAAc,SACpDzD,EACA,EAAKX,qBAETyD,aAA+B,IAAjBN,EAAOlD,OAAekD,EAAOiB,YAAc,SACrDzD,EACA,EAAKT,iBAETyB,MAAO,CACLiB,QAAS,CAAEC,KAAM,WACjBI,MAAO,CAAEJ,KAAM,WACfK,QAAS,CAAEL,KAAM,YAEnBa,eAAcjB,EACdlB,QAAS,EAAKnB,qBAEd,4BACEuD,GAAI,EACJC,GAAI,EACJC,EAAoB,IAAjBV,EAAOlD,OAAekD,EAAOiB,YAAc,IAAO,EAAI,GACzDzC,MAAO,CACLmB,OAAQ,OACRC,YAAa,EACbe,QAAS,KAGb,0BACEC,WAAW,SACXrC,EAAG,IACHC,MAAO,CACLqC,WAAY,qBACZnB,KAAM,OACNoB,SAAU,MACVC,OAAQ,YAGQ,IAAjBf,EAAOlD,OAAekD,EAAOiB,YAAc,IAAO,GAAKjB,EAAOiB,4B,GAnRrEC,IAAMC,W,iCCoFTC,G,MA7FD,SAAC,GAED,IADZC,EACW,EADXA,UAGMC,EAAU,CAAC,CACfC,OAAQ,YACRC,SAAU,mBACVzC,MAAO,IACP0C,KAAM,SAACC,GAAD,OACJ,kBAAC,IAAD,CACElF,KAAK,OACLgC,MAAO,CACLmD,OAAqB,IAAdD,EAAIE,MAAkB,WACX,IAAdF,EAAIE,MAAiB,UACnB,UACNC,WAAY,IAEdC,KAAK,QAITC,aAAc,SAACC,EAAgDN,GAC7D,MAAqB,QAAjBM,EAAOJ,QAIU,SAAjBI,EAAOJ,OACiB,IAAnBF,EAAIM,EAAOzC,KAEM,IAAnBmC,EAAIM,EAAOzC,MAGpB0C,OAAQ,gBAAGD,EAAH,EAAGA,OAAQE,EAAX,EAAWA,SAAX,OACN,4BACEA,SAAU,SAAAC,GAAK,OAAID,EAASC,EAAMC,OAAOR,QACzCpD,MAAO,CAAEO,MAAO,QAChB6C,MAAOI,EAASA,EAAOJ,MAAQ,OAE/B,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,YAIH,CACDL,OAAQ,OACRC,SAAU,SAACa,GAAD,OAAsBA,EAAEC,MAClC/C,GAAI,OACJR,MAAO,IACPgD,aAAc,SAACC,EAAwBO,GAAzB,OACZC,YAAYD,EAAMP,EAAOJ,MAAO,CAAEa,KAAM,CAAC,WAC3CC,WAAW,GACV,CACDnB,OAAQ,eACRC,SAAU,cACVO,aAAc,SAACC,EAAwBO,GAAzB,OACZC,YAAYD,EAAMP,EAAOJ,MAAO,CAAEa,KAAM,CAAC,kBAC3CC,WAAW,GACV,CACDnB,OAAQ,QACRC,SAAU,mBACVzC,MAAO,GACPgD,aAAc,SAACC,EAAwBO,GAAzB,OACZC,YAAYD,EAAMP,EAAOJ,MAAO,CAAEa,KAAM,CAAC,uBAC3CC,WAAW,GACV,CACDnB,OAAQ,UACRC,SAAU,iBACVzC,MAAO,IACN,CACDwC,OAAQ,YACRC,SAAU,YACVzC,MAAO,KAEL,CACFwC,OAAQ,WACRC,SAAU,WACVzC,MAAO,MAGT,OACE,kBAAC,IAAD,CACE4D,KAAMtB,EACNC,QAASA,EACTnD,UAAU,sBACVyE,gBAAiB,GACjBC,oBAAqB,SAACb,EAAQN,GAAT,OACnBoB,OAAOpB,EAAIM,EAAOzC,OAASyC,EAAOJ,OACpCmB,YAAU,MC5FVC,EAAa,CAAC,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,OAqE3FC,EA5DH,WAAO,IAAD,EACUC,mBAAgB,CACxCnF,eAAgB,GAChBC,eAAgB,GAChBC,OAAQ,GACRkF,aAAa,IAAIC,MAAOC,uBALV,mBACT1F,EADS,KACFT,EADE,KA6ChB,OAXAoG,qBAAU,WAzBRC,QAAQC,IAAI,CHvB+CzH,IAAMC,IACnE,wDGwBIyH,MAECC,MAAK,SAAAC,GACJzG,EAAS,CACPe,OAAQ0F,EAAI,GAAGhB,KACf5E,eAAgB4F,EAAI,GAAGhB,KAAKX,QAAO,SAAA1C,GAAC,OAAgD,IAA5C0D,EAAWY,QAAQtE,EAAEc,qBAC7DpC,eAAgB2F,EAAI,GAAGhB,KAAKX,QAAO,SAAA1C,GAAC,OAAgD,IAA5C0D,EAAWY,QAAQtE,EAAEc,qBAC7D+C,aAAa,IAAIC,MAAOC,4BAmB7B,ICpDU,SAACQ,EAAsBC,GACpC,IAAMC,EAAgBC,mBAEtBV,qBAAU,WACRS,EAAcE,QAAUJ,KAG1BP,qBAAU,WAIR,GAAc,OAAVQ,EAAgB,CAClB,IAAMvE,EAAK2E,aAJb,WACEH,EAAcE,YAGeH,GAC7B,OAAO,kBAAMK,cAAc5E,OAE5B,CAACuE,IDuCJM,EAAY,WAfVX,IACGC,MAAK,SAAAC,GACJzG,EAAS,eACJS,EADG,CAENM,OAAQ0F,EAAIhB,KACZQ,aAAa,IAAIC,MAAOC,6BAY7B,KAGHgB,QAAQC,IAAI3G,EAAMK,gBAEhB,yBAAKG,UAAU,OACb,kBAAC,EAAD,CACEJ,eAAgBJ,EAAMI,eACtBC,eAAgBL,EAAMK,eACtBC,OAAQN,EAAMM,OACdC,KAAMP,EAAMwF,cAEd,kBAAC,EAAD,CACE9B,UAAS,sBAAM1D,EAAMK,gBAAZ,YAA+BL,EAAMI,qBE3DhDwG,EAAcC,QACW,cAA7BC,OAAOzD,SAAS0D,UAEe,UAA7BD,OAAOzD,SAAS0D,UAEhBD,OAAOzD,SAAS0D,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTnB,MAAK,SAAAwB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzH,QACfoH,UAAUC,cAAcO,YAI1BlB,QAAQC,IACN,iHAKEQ,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBb,QAAQC,IAAI,sCAGRQ,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAC,GACLtB,QAAQsB,MAAM,4CAA6CA,MCnGjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsB1C,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIiB,IACpBC,iBACAxB,OAAOzD,SAASkF,MAEJC,SAAW1B,OAAOzD,SAASmF,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMoB,iBAAN,sBAEP1B,IAgEV,SAAiCM,EAAeC,GAE9CuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5B5C,MAAK,SAAA6C,GAEJ,IAAMC,EAAcD,EAASD,QAAQtK,IAAI,gBAEnB,MAApBuK,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAY5C,QAAQ,cAG5CmB,UAAUC,cAAc0B,MAAMhD,MAAK,SAAAwB,GACjCA,EAAayB,aAAajD,MAAK,WAC7Be,OAAOzD,SAAS4F,eAKpBhC,EAAgBC,EAAOC,MAG1BY,OAAM,WACLrB,QAAQC,IACN,oEAvFAuC,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMhD,MAAK,WACjCW,QAAQC,IACN,iHAMJM,EAAgBC,EAAOC,OCnD/BE,K","file":"static/js/main.6e060d27.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { TrainResponse, LocationResponse } from './types'\r\n\r\nexport const fetchLocations = (): Promise<LocationResponse> => axios.get(\r\n  'https://rata.digitraffic.fi/api/v1/metadata/stations'\r\n)\r\n\r\nexport const fetchTrains = (): Promise<TrainResponse> => axios.get(\r\n  'https://rata.digitraffic.fi/api/v1/train-locations/latest/'\r\n)\r\n","import React from 'react'\r\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from 'react-simple-maps'\r\nimport { Motion, spring } from 'react-motion'\r\nimport tooltip from 'wsdm-tooltip'\r\n\r\nimport FinlandMap from '../json/gadm36_FIN.json'\r\nimport { Location, Train } from '../types.js'\r\n\r\ninterface Props {\r\n  minorLocations: Location[],\r\n  trains: Train[],\r\n  majorLocations: Location[],\r\n  time: string\r\n}\r\n\r\ninterface State {\r\n  center: [number, number],\r\n  zoom: number,\r\n  showReset: boolean\r\n}\r\n\r\nclass Map extends React.Component<Props, State> {\r\n  tip: any\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.state = {\r\n      center: [25.2, 65.1],\r\n      zoom: 1.5,\r\n      showReset: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tip = tooltip()\r\n    this.tip.create()\r\n  }\r\n\r\n  handleMouseMove = (\r\n    info: any,\r\n    evt: { pageX: number; pageY: number }\r\n  ) => {\r\n    this.tip.show(`\r\n      <div class='tooltip-inner'>\r\n        ${info.name} (${info.shortname})\r\n      </div>\r\n    `)\r\n    this.tip.position({ pageX: evt.pageX, pageY: evt.pageY })\r\n  }\r\n\r\n  handleMouseMoveTrain = (\r\n    info: any,\r\n    evt: { pageX: number; pageY: number }\r\n  ) => {\r\n    this.tip.show(`\r\n      <div class='tooltip-inner'>\r\n        Speed: ${info.speed} km/h\r\n      </div>\r\n    `)\r\n    this.tip.position({ pageX: evt.pageX, pageY: evt.pageY })\r\n  }\r\n\r\n  handleMouseLeave = () => this.tip.hide()\r\n\r\n  handleCitySelection = (evt: any) => {\r\n    this.setState({\r\n      center: evt.coordinates,\r\n      zoom: 5,\r\n      showReset: true\r\n    })\r\n  }\r\n\r\n  handleAreaSelection = (evt: any) => {\r\n    if (evt.geometry.coordinates[0][0][0][0] !== undefined) {\r\n      this.setState({\r\n        center: [evt.geometry.coordinates[0][0][0][0], evt.geometry.coordinates[0][0][0][1]],\r\n        zoom: 3,\r\n        showReset: true\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        center: [evt.geometry.coordinates[0][0][0], evt.geometry.coordinates[0][0][1]],\r\n        zoom: 2,\r\n        showReset: true\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      center: [25.2, 65.1],\r\n      zoom: 1.5,\r\n      showReset: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      minorLocations,\r\n      majorLocations,\r\n      trains,\r\n      time\r\n    } = this.props\r\n\r\n    return (\r\n      <div className='wrapper-styles'>\r\n        <div className='menu'>\r\n          <div className='menu-center'>\r\n            {this.state.showReset && (\r\n              <button className='reset-button' onClick={this.handleReset}>Reset</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='menu-time'>\r\n          Last time updated: {time}\r\n        </div>\r\n        <Motion\r\n          defaultStyle={{\r\n            zoom: 1,\r\n            x: 25.2,\r\n            y: 65.1,\r\n          }}\r\n          style={{\r\n            zoom: spring(this.state.zoom, { stiffness: 210, damping: 20 }),\r\n            x: spring(this.state.center[0], { stiffness: 210, damping: 20 }),\r\n            y: spring(this.state.center[1], { stiffness: 210, damping: 20 }),\r\n          }}\r\n        >\r\n          {({ zoom, x, y }) => (\r\n            <ComposableMap\r\n              projection='mercator'\r\n              projectionConfig={{ scale: 1700 }}\r\n              width={980}\r\n              height={1200}\r\n              style={{ width: '100%', height: '97vh' }}\r\n            >\r\n              <ZoomableGroup center={[x, y]} zoom={zoom} disablePanning>\r\n                <Geographies geography={FinlandMap}>\r\n                  {(geographies: any[], projection: any) =>\r\n                    geographies.map((geography, i) =>\r\n                      geography.id !== 'ATA' && (\r\n                        <Geography\r\n                          key={i}\r\n                          geography={geography}\r\n                          projection={projection}\r\n                          onClick={this.handleAreaSelection}\r\n                          style={{\r\n                            default: {\r\n                              fill: '#ECEFF1',\r\n                              stroke: '#607D8B',\r\n                              strokeWidth: 0.75,\r\n                              outline: 'none',\r\n                            },\r\n                            hover: {\r\n                              fill: '#5D8CAE',\r\n                              stroke: '#607D8B',\r\n                              strokeWidth: '0.75',\r\n                              outline: 'none',\r\n                            },\r\n                            pressed: {\r\n                              fill: '#236B8E',\r\n                              stroke: '#607D8B',\r\n                              strokeWidth: '0.75',\r\n                              outline: 'none',\r\n                            },\r\n                          }}\r\n                        />\r\n                      ))}\r\n                </Geographies>\r\n                <Markers>\r\n                  {minorLocations.map((marker, i) => (\r\n                    <Marker\r\n                      key={i}\r\n                      marker={{\r\n                        coordinates: [marker.longitude, marker.latitude],\r\n                        name: marker.stationName,\r\n                        shortname: marker.stationShortCode\r\n                      }}\r\n                      style={{\r\n                        default: { fill: '#FF5722' },\r\n                        hover: { fill: '#FFFFFF' },\r\n                        pressed: { fill: '#FFFFFF' }\r\n\r\n                      }}\r\n                      onMouseMove={this.handleMouseMove}\r\n                      onMouseLeave={this.handleMouseLeave}\r\n                      data-station={i}\r\n                      onClick={this.handleCitySelection}\r\n                    >\r\n\r\n                      <circle\r\n                        cx={0}\r\n                        cy={0}\r\n                        r={2.5}\r\n                        style={{\r\n                          stroke: '#FF5722',\r\n                          strokeWidth: 2,\r\n                          opacity: 1,\r\n                        }}\r\n                      />\r\n                    </Marker>\r\n                  ))}\r\n                </Markers>\r\n                <Markers>\r\n                  {majorLocations.map((marker, i) => (\r\n                    <Marker\r\n                      key={i}\r\n                      marker={{\r\n                        coordinates: [marker.longitude, marker.latitude],\r\n                        name: marker.stationName,\r\n                        shortname: marker.stationShortCode\r\n                      }}\r\n                      style={{\r\n                        default: { fill: '#ff9900' },\r\n                        hover: { fill: '#e68a00' },\r\n                        pressed: { fill: '#e68a00' }\r\n\r\n                      }}\r\n                      onMouseMove={this.handleMouseMove}\r\n                      onMouseLeave={this.handleMouseLeave}\r\n                      data-station={i}\r\n                      onClick={this.handleCitySelection}\r\n                    >\r\n\r\n                      <circle\r\n                        cx={0}\r\n                        cy={0}\r\n                        r={19}\r\n                        style={{\r\n                          stroke: '#ff9900',\r\n                          strokeWidth: 2,\r\n                          opacity: 1,\r\n                        }}\r\n                      />\r\n                      <text\r\n                        textAnchor='middle'\r\n                        y={5.2}\r\n                        style={{\r\n                          fontFamily: 'Roboto, sans-serif',\r\n                          fill: '#fff',\r\n                          fontSize: '13px',\r\n                          cursor: 'default'\r\n                        }}\r\n                      >\r\n                        {marker.stationShortCode}\r\n                      </text>\r\n                    </Marker>\r\n\r\n                  ))}\r\n                </Markers>\r\n                <Markers>\r\n                  {trains.map((marker, i) => (\r\n                    <Marker\r\n                      key={i}\r\n                      marker={{\r\n                        coordinates: [marker.location.coordinates[0], marker.location.coordinates[1]],\r\n                        speed: marker.speed\r\n                      }}\r\n                      onMouseMove={marker.speed === 0 || marker.trainNumber > 1000\r\n                        ? undefined\r\n                        : this.handleMouseMoveTrain\r\n                      }\r\n                      onMouseLeave={marker.speed === 0 || marker.trainNumber > 1000\r\n                        ? undefined\r\n                        : this.handleMouseLeave\r\n                      }\r\n                      style={{\r\n                        default: { fill: '#3657db' },\r\n                        hover: { fill: '#1c37a5' },\r\n                        pressed: { fill: '#182f8e' }\r\n                      }}\r\n                      data-station={i}\r\n                      onClick={this.handleCitySelection}\r\n                    >\r\n                      <circle\r\n                        cx={0}\r\n                        cy={0}\r\n                        r={marker.speed === 0 || marker.trainNumber > 1000 ? 0 : 13}\r\n                        style={{\r\n                          stroke: '#fff',\r\n                          strokeWidth: 2,\r\n                          opacity: 1,\r\n                        }}\r\n                      />\r\n                      <text\r\n                        textAnchor='middle'\r\n                        y={2.5}\r\n                        style={{\r\n                          fontFamily: 'Roboto, sans-serif',\r\n                          fill: '#fff',\r\n                          fontSize: '8px',\r\n                          cursor: 'default'\r\n                        }}\r\n                      >\r\n                        {marker.speed === 0 || marker.trainNumber > 1000 ? '' : marker.trainNumber}\r\n                      </text>\r\n                    </Marker>\r\n                  ))}\r\n                </Markers>\r\n              </ZoomableGroup>\r\n            </ComposableMap>\r\n          )}\r\n        </Motion>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map","import React from 'react'\r\nimport { Location } from '../types'\r\nimport ReactTable from 'react-table'\r\nimport FontAwesome from 'react-fontawesome'\r\nimport matchSorter from 'match-sorter'\r\n\r\nimport 'react-table/react-table.css'\r\n\r\ninterface Props {\r\n  locations: Location[]\r\n}\r\n\r\nconst Table = ({\r\n  locations\r\n}: Props) => {\r\n\r\n  const columns = [{\r\n    Header: 'Passanger',\r\n    accessor: 'passengerTraffic',\r\n    width: 100,\r\n    Cell: (row: { value: boolean }) => (\r\n      <FontAwesome\r\n        name='user'\r\n        style={{\r\n          color: row.value === false ? '#595959'\r\n            : row.value === true ? '#33cc33'\r\n              : '#000000',\r\n          marginLeft: 30\r\n        }}\r\n        size='2x'\r\n      />\r\n    ),\r\n  \r\n    filterMethod: (filter: { value: string; id: string | number }, row: { [x: string]: boolean }) => {\r\n      if (filter.value === 'all') {\r\n  \r\n        return true;\r\n      }\r\n      if (filter.value === 'true') {\r\n        return row[filter.id] === true;\r\n      }\r\n      return row[filter.id] === false;\r\n    },\r\n  \r\n    Filter: ({ filter, onChange }: any) =>\r\n      <select\r\n        onChange={event => onChange(event.target.value)}\r\n        style={{ width: '100%' }}\r\n        value={filter ? filter.value : 'all'}\r\n      >\r\n        <option value='all'>All</option>\r\n        <option value='true'>True</option>\r\n        <option value='false'>False</option>\r\n      </select>\r\n  \r\n  \r\n  }, {\r\n    Header: 'Type',\r\n    accessor: (d: { type: any }) => d.type,\r\n    id: 'type',\r\n    width: 270,\r\n    filterMethod: (filter: { value: any }, rows: any) =>\r\n      matchSorter(rows, filter.value, { keys: ['type'] }),\r\n    filterAll: true\r\n  }, {\r\n    Header: 'Station name',\r\n    accessor: 'stationName',\r\n    filterMethod: (filter: { value: any }, rows: any) =>\r\n      matchSorter(rows, filter.value, { keys: ['stationName'] }),\r\n    filterAll: true\r\n  }, {\r\n    Header: 'Short',\r\n    accessor: 'stationShortCode',\r\n    width: 80,\r\n    filterMethod: (filter: { value: any }, rows: any) =>\r\n      matchSorter(rows, filter.value, { keys: ['stationShortCode'] }),\r\n    filterAll: true\r\n  }, {\r\n    Header: 'UICCode',\r\n    accessor: 'stationUICCode',\r\n    width: 80\r\n  }, {\r\n    Header: 'Longitude',\r\n    accessor: 'longitude',\r\n    width: 120\r\n  }\r\n    , {\r\n    Header: 'Latitude',\r\n    accessor: 'latitude',\r\n    width: 120\r\n  }]\r\n\r\n  return (\r\n    <ReactTable\r\n      data={locations}\r\n      columns={columns}\r\n      className='-striped -highlight'\r\n      defaultPageSize={25}\r\n      defaultFilterMethod={(filter, row) =>\r\n        String(row[filter.id]) === filter.value}\r\n      filterable\r\n    />\r\n  )\r\n}\r\n\r\nexport default Table","import React, { useState, useEffect } from 'react'\nimport * as client from './client'\nimport { Train, Location } from './types'\nimport useInterval from './useInterval'\nimport './index.css'\n\nimport { Map, Table } from './components'\n\nconst majorStops = ['VS', 'TPE', 'TKU', 'HKI', 'SK', 'JY', 'PRI', 'KOK', 'OL', 'PM', 'KAJ', 'JNS', 'KEM', 'ROI']\n\ninterface State {\n  minorLocations: Location[],\n  trains: Train[],\n  majorLocations: Location[],\n  updatedTime: string\n}\n\nconst App = () => {\n  const [state, setState] = useState<State>({\n    minorLocations: [],\n    majorLocations: [],\n    trains: [],\n    updatedTime: new Date().toLocaleTimeString()\n  })\n\n  const fetchInitials = () => {\n    Promise.all([\n      client.fetchLocations(),\n      client.fetchTrains()\n    ])\n      .then(res => {\n        setState({\n          trains: res[1].data,\n          minorLocations: res[0].data.filter(i => majorStops.indexOf(i.stationShortCode) === -1),\n          majorLocations: res[0].data.filter(i => majorStops.indexOf(i.stationShortCode) !== -1),\n          updatedTime: new Date().toLocaleTimeString()\n        })\n      })\n  }\n\n  const getTrains = () => {\n    client.fetchTrains()\n      .then(res => {\n        setState({\n          ...state,\n          trains: res.data,\n          updatedTime: new Date().toLocaleTimeString()\n        })\n      })\n  }\n\n  useEffect(() => {\n    fetchInitials()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useInterval(() => {\n    getTrains()\n  }, 5000)\n\n\n  console.log(state.majorLocations)\n  return (\n    <div className='app'>\n      <Map\n        minorLocations={state.minorLocations}\n        majorLocations={state.majorLocations}\n        trains={state.trains}\n        time={state.updatedTime}\n      />\n      <Table\n        locations={[...state.majorLocations, ...state.minorLocations]}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import { useRef, useEffect } from 'react'\r\n\r\nexport default (callback: () => void, delay: number) => {\r\n  const savedCallback = useRef<any>()\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  })\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current()\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n  }, [delay])\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}